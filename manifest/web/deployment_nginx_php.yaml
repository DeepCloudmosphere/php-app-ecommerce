apiVersion: apps/v1
kind: Deployment
metadata:
  name: dp-nginx-php
  #namespace: dev
  labels:
    name: dp-nginx-php
spec:
  replicas: 1
  selector:
    matchLabels:
      web: nginx-php
      tier: front-end
  template:
    metadata:
      name: nginx-php-pod
      labels:
        web: nginx-php
        tier: front-end
    spec:
      # your node must have this label otherwise pod  going to pending state
      # nodeSelector:
      #   node: kubenode02

      ######## node affinity work like node selector but in complex scenerio ##########

      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            # - weight: 1
            #   preference:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: node
                    operator: In
                    values:
                      - kubenode02
                      - kubemaster

      #  if node have color=blue:NoSchedule tainted this pod can schedule on it because it has toleration  , or may be schedule on other node if here no nodeselector or nodeaffinity  is set.
      tolerations:
        - key: "color"
          operator: "Equal"
          value: "blue"
          effect: "NoSchedule"
          # tolerationSeconds: 10
        - key: "node-role.kubernetes.io/control-plane"
          operator: "Exists"
          effect: "NoSchedule"
          # tolerationSeconds: 10
      volumes:
        - name: nginx-config-volume
          configMap:
            name: nginx-config
        - name: shared-files
          emptyDir: {}
        - name: php-fpm-config
          configMap:
            defaultMode: 420
            name: php-fpm-config

      containers:
        - name: php-ctr
          image: deepcloudmosphere/dp-nginx-php:phpfpm-code
          ports:
            - containerPort: 9000
          resources:
            requests:
              memory: "100Mi"
              cpu: "150m"
            limits:
              cpu: "400m"
              memory: "200Mi"

          volumeMounts:
            - mountPath: /var/www/html/
              name: shared-files

            - name: php-fpm-config
              mountPath: /usr/local/etc/php-fpm.d/www.conf
              subPath: www.conf

          # Important! After this container has started, the PHP files
          # in our Docker image aren't in the shared volume. We need to
          # get them into the shared volume. If we tried to write directly
          # to this volume from our Docker image the files wouldn't appear
          # in the nginx container.
          #
          # So, after the container has started, copy the PHP files from this
          # container's local filesystem (/app -- added via the Docker image)
          # to the shared volume, which is mounted at /var/www/html.

          lifecycle:
            postStart:
              exec:
                command: ["/bin/sh", "-c", "cp -r /app/. /var/www/html"]

          # env variable for mysqli connector in php image

          envFrom:
            - configMapRef:
                name: php-db-configmap
            - secretRef:
                name: php-db-secret

          # env:
          # # database user
          # - name: DB_USERNAME
          #   valueFrom:
          #     configMapKeyRef:
          #       name: php-db-configmap
          #       key: USER
          # #database host
          # - name: DB_HOST
          #   valueFrom:
          #     configMapKeyRef:
          #       name: php-db-configmap
          #       key: HOST
          # # database password
          # - name: DB_PASSWORD
          #   valueFrom:
          #     secretKeyRef:
          #       name: php-db-secret
          #       key: DB_PASSWORD
          # # database name
          # - name: DB_DATABASE
          #   valueFrom:
          #     secretKeyRef:
          #       name: php-db-secret
          #       key: DB_DATABASE

        - name: php-fpm-exporter
          image: "quay.io/sysdig/php-fpm-exporter:v2.3.3"
          ports:
            - containerPort: 9253
          env:
            - name: PHP_FPM_WEB_LISTEN_ADDRESS
              value: :9253
            - name: PHP_FPM_WEB_TELEMETRY_PATH
              value: /metrics
            - name: PHP_FPM_SCRAPE_URI
              value: tcp://127.0.0.1:9000/status
            - name: PHP_FPM_FIX_PROCESS_COUNT
              value: "false"
            - name: PHP_FPM_LOG_LEVEL
              value: info
          resources:
            limits:
              cpu: 128m
              memory: 128Mi
            requests:
              cpu: 64m
              memory: 64Mi

        - name: nginx-ctr
          image: nginx
          ports:
            - containerPort: 80
          resources:
            requests:
              memory: "100Mi"
              cpu: "150m"
            limits:
              cpu: "400m"
              memory: "200Mi"

          volumeMounts:
            - mountPath: /var/www/html/
              name: shared-files
            - mountPath: /etc/nginx/conf.d/
              name: nginx-config-volume

      ##################################you can also use init container for code #######################

      # initContainers:
      # - name: init-myservice
      #   image: deepcloudmosphere/dp-nginx-php:init-helper
      #   command: ['sh', '-c', 'git clone https://github.com/Dountless/web-app-ecommerce.git/ /opt/']
      #   volumeMounts:
      #   - mountPath: /opt/
      #     name: my-data
      ######################################################################################################
