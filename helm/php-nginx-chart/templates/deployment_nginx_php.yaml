apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-dp-nginx-php
  namespace: {{ template "namespace" . }}
  {{- if .Values.labels.dp }}
  labels:
    name: {{ .Values.labels.dp }}
  {{- end }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
    {{- template "labels" . }}
  template:
    metadata:
      name: {{ .Release.Name }}-nginx-php-pod
      labels:
      {{- include "labels" . | indent 2  }}
    spec:
      # your node must have this label otherwise pod  going to pending state
      # nodeSelector:
      #   node: kubenode02

      ######## node affinity work like node selector but node affinity  more used  in complex scenerio ##########
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: {{ .Values.nodeAffinity.key }}
                    operator: {{ .Values.nodeAffinity.operator }}
                    values:
                    {{- range .Values.nodeAffinity.values }}
                       - {{ . }}
                    {{- end }}

      tolerations:
        - key: {{ .Values.tolerations.a.key }}
          operator: {{ .Values.tolerations.a.operator }}
          value: {{ .Values.tolerations.a.value }}
          effect: {{ .Values.tolerations.a.effect }}
          # tolerationSeconds: 10
        - key: {{ .Values.tolerations.b.key }}
          operator: {{ .Values.tolerations.b.operator }}
          effect: {{ .Values.tolerations.b.effect }}
          # tolerationSeconds: 10

      volumes:
      - name: {{ .Values.volumes.vol1 }}
        configMap:
          name: {{ .Release.Name }}-{{ .Values.configmap.nginx }}
      - name: {{ .Values.volumes.vol2 }}
        emptyDir: {}
      - name: {{ .Values.volumes.vol3 }}
        configMap:
          name: {{ .Release.Name }}-{{ .Values.configmap.php_fpm }}

      containers:
      # php_fpm
      - name: {{ .Release.Name }}-{{ .Values.containers.php.name }}
        {{- with .Values.image.php }}
        image: {{ .repository | default "nginx" }}:{{ .tag | default "latest" }}
        {{- end }}
        ports:
        - containerPort: {{ .Values.ports.php }}
        # resources:
        #   requests:
        #   {{- with .Values.containers.php.resources.requests }}
        #     memory: {{ .memory }}
        #     cpu: {{ .cpu }}
        #   {{- end }}

        #   limits:
        #   {{- with .Values.containers.php.resources.limits }}
        #     cpu: {{ .cpu  }}
        #     memory: {{ .memory  }}
        #   {{- end }}



        volumeMounts:
        {{- template "volumes" . }}
        - name: {{ .Values.volumes.vol3 }}
          mountPath: {{ .Values.volumeMounts.php_fpm.path }}
          subPath: {{ .Values.volumeMounts.php_fpm.subpath }}

        # Important! After this container has started, the PHP files
        # in our Docker image aren't in the shared volume. We need to 
        # get them into the shared volume. If we tried to write directly
        # to this volume from our Docker image the files wouldn't appear
        # in the nginx container.
        #
        # So, after the container has started, copy the PHP files from this
        # container's local filesystem (/app -- added via the Docker image) 
        # to the shared volume, which is mounted at /var/www/html.

        lifecycle:
          postStart:
            exec:
              command: ["/bin/sh", "-c", "cp -r /app/. /var/www/html"]

        # env variable for mysqli connector in php image 

        envFrom:
        - configMapRef:
            name: {{ .Release.Name }}-{{ .Values.configmap.phpdb }}
        - secretRef:
            name: {{ .Release.Name }}-{{ .Values.secret.phpdb }}


        # env:
        # # database user
        # - name: DB_USERNAME
        #   valueFrom:
        #     configMapKeyRef:
        #       name: php-db-configmap
        #       key: USER
        # #database host
        # - name: DB_HOST
        #   valueFrom:
        #     configMapKeyRef:
        #       name: php-db-configmap
        #       key: HOST
        # # database password
        # - name: DB_PASSWORD
        #   valueFrom:
        #     secretKeyRef:
        #       name: php-db-secret
        #       key: DB_PASSWORD
        # # database name
        # - name: DB_DATABASE
        #   valueFrom:
        #     secretKeyRef:
        #       name: php-db-secret
        #       key: DB_DATABASE

      # nginx
      - name: {{ .Release.Name }}-{{ .Values.containers.nginx.name }}
        {{- with .Values.image.nginx }}
        image: {{ .repository | default "nginx" }}:{{ .tag | default "latest" }}
        {{- end }}
        ports:
        - containerPort: {{ .Values.ports.nginx }}

        # resources:
        #   requests:
        #   {{- with .Values.containers.nginx.resources.requests }}
        #     memory: {{ .memory }}
        #     cpu: {{ .cpu }}
        #   {{- end }}

        #   limits:
        #   {{- with .Values.containers.nginx.resources.limits }}
        #     cpu: {{ .cpu  }}
        #     memory: {{ .memory  }}
        #   {{- end }}

        volumeMounts:
        {{- template "volumes" . }}
        - mountPath: {{ .Values.volumeMounts.nginxConf }}
          name: {{ .Values.volumes.vol1 }}

      # php_fpm_exporter
      - name: {{ .Release.Name }}-{{ .Values.containers.php_fpm_exporter.name }}
        {{- with .Values.image.php_fpm_exporter }}
        image: {{ .repository | default "quay.io/sysdig/php-fpm-exporter" }}:{{ .tag | default "v2.3.3" }}
        {{- end }}
        ports:
            - containerPort: {{ .Values.ports.php_fpm_exporter }}

        env:
        {{- with .Values.env }}
        - name: {{ .PHP_FPM_WEB_LISTEN_ADDRESS.name }}
          value: "{{ .PHP_FPM_WEB_LISTEN_ADDRESS.value }}"
        - name: {{ .PHP_FPM_WEB_TELEMETRY_PATH.name }}
          value: {{ .PHP_FPM_WEB_TELEMETRY_PATH.value }}
        - name: {{ .PHP_FPM_SCRAPE_URI.name }}
          value: {{ .PHP_FPM_SCRAPE_URI.value }}
        - name: {{ .PHP_FPM_FIX_PROCESS_COUNT.name }}
          value: {{ .PHP_FPM_FIX_PROCESS_COUNT.value }}
        - name: {{ .PHP_FPM_LOG_LEVEL.name }}
          value: {{ .PHP_FPM_LOG_LEVEL.value }}
        {{- end }}
          








      ##################################you can also use init container for code #######################

      # initContainers:
      # - name: init-myservice
      #   image: deepcloudmosphere/dp-nginx-php:init-helper
      #   command: ['sh', '-c', 'git clone https://github.com/Dountless/web-app-ecommerce.git/ /opt/']
      #   volumeMounts:
      #   - mountPath: /opt/
      #     name: my-data
      ######################################################################################################










